# Example simple tracker pipeline
#
# Runs a 8-node object tracking pipeline

# ============================== GLOBAL PROPERTIES =================================
# global pipeline config
#
config _pipeline:_edge
       :capacity 5

# ============================== INPUT FRAME LIST ==================================
process input
  :: frame_list_input
  :image_list_file                input_list.txt
  :frame_time                     0.03333
  :image_reader:type              vxl

# ================================== DETECTOR ======================================

process detector
  :: image_object_detector
  :detector:type                  darknet

  # Network config
  :detector:darknet:net_config    ../detector_pipelines/models/model2.cfg
  :detector:darknet:weight_file   ../detector_pipelines/models/model2.weights
  :detector:darknet:class_names   ../detector_pipelines/models/scallop_and_fish.lbl

  # Detector parameters
  :detector:darknet:thresh        0.001
  :detector:darknet:hier_thresh   0.001
  :detector:darknet:gpu_index     0

  # Image scaling parameters
  :detector:darknet:resize_option maintain_ar
  :detector:darknet:resize_ni     544
  :detector:darknet:resize_nj     544
  :detector:darknet:scale         1.0

process detector_writer
  :: detected_object_output

  # Type of file to output
  :file_name     output/individual_detections.kw18
  :writer:type   kw18

  # Write out FSO classifications alongside tracks
  :writer:kw18:write_tot         true
  :writer:kw18:tot_field1_ids    fish
  :writer:kw18:tot_field2_ids    scallop

connect from input.image
        to   detector.image

connect from detector.detected_object_set
        to   detector_writer.detected_object_set

connect from input.image_file_name
        to   detector_writer.image_file_name

# ================================ CORE TRACKER  ===================================

process tracker
 :: compute_association_matrix
  :compute_association_matrix:type                   from_features

process track_associator
  :: associate_detections_to_tracks
  :associate_detections_to_tracks:type               threshold

process track_initializer
  :: initialize_object_tracks
  :track_initializer:type                            threshold

  block track_initializer:threshold:filter
    type                                             class_probablity_filter
    class_probablity_filter:threshold                0.001
    filter:class_probablity_filter:keep_all_classes  false
    filter:class_probablity_filter:keep_classes      fish;scallop
  endblock

connect from input.image
        to   faster_rcnn.image


# -- end of file --
