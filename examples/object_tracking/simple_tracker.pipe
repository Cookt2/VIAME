# Example simple tracker pipeline
#
# Runs a 8-node object tracking pipeline

# ============================== GLOBAL PROPERTIES =================================
# global pipeline config
#
config _pipeline:_edge
       :capacity 5

# ============================== INPUT FRAME LIST ==================================
process input
  :: frame_list_input
  :image_list_file                input_list.txt
  :frame_time                     0.03333
  :image_reader:type              vxl

# ================================== DETECTOR ======================================

process detector
  :: image_object_detector
  :detector:type                 darknet

  # Network config
  :detector:darknet:net_config   ../detector_pipelines/models/default_yolo_v2.cfg
  :detector:darknet:weight_file  ../detector_pipelines/models/default_yolo_v2.weights
  :detector:darknet:class_names  ../detector_pipelines/models/default_yolo_v2.lbl

  # Detector parameters
  :detector:darknet:thresh       0.001
  :detector:darknet:hier_thresh  0.001
  :detector:darknet:gpu_index    0

  # Image scaling parameters
  :detector:darknet:resize_option maintain_ar
  :detector:darknet:resize_ni    544
  :detector:darknet:resize_nj    544
  :detector:darknet:scale        1.0

process detector_writer
  :: detected_object_output

  # Type of file to output
  :file_name     output/individual_detections.kw18
  :writer:type   kw18

  # Write out FSO classifications alongside tracks
  :writer:kw18:write_tot         true
  :writer:kw18:tot_field1_ids    fish
  :writer:kw18:tot_field2_ids    scallop

connect from input.image
        to   detector.image
connect from detector.detected_object_set
        to   detector_writer.detected_object_set
connect from input.image_file_name
        to   detector_writer.image_file_name

# ================================ CORE TRACKER  ===================================

process detection_descriptor
 :: compute_track_descriptors
  :inject_to_detections                        true
  :computer:type                               burnout
  :computer:burnout:config_file                detection_descriptors.conf

process tracker
 :: compute_association_matrix
  :matrix_generator:type                       from_features
  :matrix_generator:from_features:max_distance 40

  block matrix_generator:from_features:filter
    :type                                      class_probablity_filter
    :class_probablity_filter:threshold         0.001
    :class_probablity_filter:keep_all_classes  false
    :class_probablity_filter:keep_classes      fish;scallop
  endblock

process track_associator
  :: associate_detections_to_tracks
  :track_associator:type                       threshold
  :track_associator:threshold:threshold        100.0
  :track_associator:threshold:higher_is_better false

process track_initializer
  :: initialize_object_tracks
  :track_initializer:type                      threshold

  block track_initializer:threshold:filter
    :type                                      class_probablity_filter
    :class_probablity_filter:threshold         0.001
    :class_probablity_filter:keep_all_classes  false
    :class_probablity_filter:keep_classes      fish;scallop
  endblock

# Connect inputs to detection descriptor
connect from input.image
        to   detection_descriptor.image
connect from input.timestamp
        to   detection_descriptor.timestamp
connect from detector.detected_object_set
        to   detection_descriptor.detected_object_set

# Connect inputs to tracker
connect from input.image
        to   tracker.image
connect from input.timestamp
        to   tracker.timestamp
connect from detection_descriptor.detected_object_set
        to   tracker.detected_object_set
connect from track_initializer.object_track_set
        to   tracker.object_track_set

# Connect inputs to track_associator
connect from input.image
        to   track_associator.image
connect from input.timestamp
        to   track_associator.timestamp
connect from tracker.matrix_d
        to   track_associator.matrix_d
connect from tracker.object_track_set
        to   track_associator.object_track_set
connect from tracker.detected_object_set
        to   track_associator.detected_object_set

# Connect inputs to track_initializer
connect from input.image
        to   track_initializer.image
connect from input.timestamp
        to   track_initializer.timestamp
connect from track_associator.object_track_set
        to   track_initializer.object_track_set
connect from track_associator.unused_detections
        to   track_initializer.detected_object_set

# ================================= INDEX DATA  ====================================

process track_writer
  :: write_object_track
  :file_name                        output_tracks.kw18
  :writer:type                      kw18

#process kwa_writer
#  :: kw_archive_writer
#  relativepath output_directory     .
#  :base_filename                    kw_archive
#  :separate_meta                    true
#  :mission_id                       none
#  :stream_id                        none
#  :compress_image                   true
#  :static/gsd[ro]{CONF}             common:fixed_gsd
#  :static/corner_points[ro]         0 0 0 0 0 0 0 0

# Connect inputs to track writer
connect from track_initializer.object_track_set
        to   track_writer.object_track_set

# -- end of file --
