# Multi-Detector CNN Pipeline
#
# Runs multiple CNN-based object detectors in the VIAME framework:
#
#    (a) YOLOv2
#    (b) Scallop-TK
#    (c) Faster R-CNN

# ===================== GLOBAL PROPERTIES ========================
# global pipeline config
#
config _pipeline:_edge
       :capacity 5

# ====================== INPUT FRAME LIST ========================
process input
  :: frame_list_input
  :image_list_file     input_list.txt
  :frame_time          0.03333
  :image_reader:type   vxl

# =========================== YOLO v2 ============================

process yolo_v2
  :: image_object_detector
  :detector:type    darknet

  # Network config, weights, and names
  :detector:darknet:net_config    models/default_yolo_v2.cfg
  :detector:darknet:weight_file   models/default_yolo_v2.weights
  :detector:darknet:class_names   models/default_yolo_v2.lbl

  # Detector parameters
  :detector:darknet:thresh        0.001
  :detector:darknet:hier_thresh   0.001
  :detector:darknet:gpu_index     0

  # Image scaling parameters
  :detector:darknet:resize_option maintain_ar
  :detector:darknet:resize_ni     544
  :detector:darknet:resize_nj     544
  :detector:darknet:scale         1.0

process yolo_v2_writer
  :: detected_object_output

  # Type of file to output
  :file_name     output/yolo_v2_detections.kw18
  :writer:type   kw18

  # Write out FSO classifications alongside tracks
  :writer:kw18:write_tot         true
  :writer:kw18:tot_field1_ids    fish
  :writer:kw18:tot_field2_ids    scallop

connect from input.image
        to   yolo_v2.image

connect from yolo_v2.detected_object_set
        to   yolo_v2_writer.detected_object_set

connect from input.image_file_name
        to   yolo_v2_writer.image_file_name

# ========================== Scallop-TK ==========================

#process scallop_tk
#  :: image_object_detector
#  :detector:type    scallop_tk
#  :detector:scallop_tk:config_file models/scallop_tk/SYSTEM_SETTINGS
#
#process scallop_tk_writer
#  :: detected_object_output
#  :file_name     output/scallop_tk_detections.kw18
#  :writer:type   kw18
#
#connect from input.image
#        to   scallop_tk.image
#
#connect from scallop_tk.detected_object_set
#        to   scallop_tk_writer.detected_object_set
#
#connect from input.image_file_name
#        to   scallop_tk_writer.image_file_name

# ======================== FASTER R-CNN ==========================
process faster_rcnn
 :: image_object_detector
  :detector:type    faster_rcnn

  # Network config, weights, and names
  :detector:faster_rcnn:prototxt    models/frcnn.prototxt
  :detector:faster_rcnn:caffe_model models/frcnn.caffemodel
  :detector:faster_rcnn:class_file  models/frcnn_ids.lbl

  # Other settings
  :detector:faster_rcnn:use_gpu     true
  :detector:faster_rcnn:chip_image  false
  :detector:faster_rcnn:chip_width  544
  :detector:faster_rcnn:chip_height 544
  :detector:faster_rcnn:stride      544
  :detector:faster_rcnn:target_size 544

  # Output layers to use for BBOX formulation
  :detector:faster_rcnn:roi_layer_str   rois
  :detector:faster_rcnn:cls_layer_str   cls_prob
  :detector:faster_rcnn:bbox_layer_str  bbox_pred_b

process faster_rcnn_filter
  :: detected_object_filter
  :filter:type   class_probablity_filter
  :filter:class_probablity_filter:threshold        0.001
  :filter:class_probablity_filter:keep_all_classes false
  :filter:class_probablity_filter:keep_classes     fish;scallop

process faster_rcnn_writer
  :: detected_object_output

  # Type of file to output
  :file_name     output/faster_rcnn_detections.kw18
  :writer:type   kw18

  # Write out FSO classifications alongside tracks
  :writer:kw18:write_tot         true
  :writer:kw18:tot_field1_ids    fish
  :writer:kw18:tot_field2_ids    scallop

connect from input.image
        to   faster_rcnn.image

connect from faster_rcnn.detected_object_set
        to   faster_rcnn_filter.detected_object_set

connect from faster_rcnn_filter.detected_object_set
        to   faster_rcnn_writer.detected_object_set

connect from input.image_file_name
        to   faster_rcnn_writer.image_file_name

# -- end of file --
