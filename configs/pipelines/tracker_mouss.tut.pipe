# Example simple tracker pipeline
#
# Runs a standalone TUT object tracking pipeline

# ============================== GLOBAL PROPERTIES =================================
# global pipeline config
#
config _pipeline:_edge
   :capacity                                   5

config _scheduler
   :type                                       pythread_per_process

# ============================== INPUT FRAME LIST ==================================

include common_default_input.pipe

# ================================== DETECTOR ======================================

process detector
  :: image_object_detector
  :detector:type                               darknet

  block detector:darknet

    # Network config, weights, and names
    relativepath net_config  =                 models/mouss_yolo_v2_704_species.cfg
    relativepath weight_file =                 models/mouss_yolo_v2_704_species.weights
    relativepath class_names =                 models/mouss_yolo_v2_704_species.lbl

    # Detector parameters
    :thresh                                    0.001
    :hier_thresh                               0.001
    :gpu_index                                 0

    # Image scaling parameters
    :resize_option                             chip_and_original
    :resize_ni                                 704
    :resize_nj                                 704
    :scale                                     1.25
    :chip_step                                 650

  endblock

process nms_refiner
  :: refine_detections
  :refiner:type                                nms
  
  block refiner:nms
    :max_overlap                               0.50
    :nms_scale_factor                          1.0
    :output_scale_factor                       1.0
  endblock

process detector_writer
  :: detected_object_output

  # Type of file to output
  :file_name                                   computed_detections.csv
  :writer:type                                 viame_csv

connect from input.image
        to   detector.image

connect from input.image
        to   nms_refiner.image
connect from detector.detected_object_set
        to   nms_refiner.detected_object_set

connect from nms_refiner.detected_object_set
        to   detector_writer.detected_object_set
connect from input.image_file_name
        to   detector_writer.image_file_name

# ================================ CORE TRACKER  ===================================

include common_default_tracker.pipe

# Connect inputs to tracker
connect from input.image
        to   tracker.image
connect from input.timestamp
        to   tracker.timestamp
connect from nms_refiner.detected_object_set
        to   tracker.detected_object_set

# ================================= INDEX DATA  ====================================

process track_writer
  :: write_object_track
  :file_name                                   computed_tracks.csv
  :writer:type                                 viame_csv
  :writer:stream_identifier                    input_list.txt

# Connect inputs to track writer
connect from tracker.object_track_set
        to   track_writer.object_track_set
connect from input.timestamp
        to   track_writer.timestamp

# -- end of file --
