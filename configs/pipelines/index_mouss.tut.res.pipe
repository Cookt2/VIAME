# Ingest video pipeline using pytorch descriptors
#
# Runs a multi-node object tracking, descriptor generation, and indexing pipeline

# ============================== GLOBAL PROPERTIES =================================
# global pipeline config
#
config _pipeline:_edge
   :capacity                                   10

config _scheduler
   :type                                       pythread_per_process

# ================================== VIDEO INPUT ===================================

include common_default_input.pipe

process downsampler
  :: downsample
  :target_frame_rate                           2
  :burst_frame_count                           0
  :burst_frame_break                           0

connect from input.image
        to   downsampler.input_1
connect from input.frame_rate
        to   downsampler.frame_rate
connect from input.timestamp
        to   downsampler.timestamp

# =================================== DETECTOR =====================================

include common_mouss_detector_with_filter.pipe

process detector_writer
  :: detected_object_output

  # Type of file to output
  :file_name                                   [INSERT_ME]
  :writer:type                                 viame_csv

connect from downsampler.output_1
        to   detector.image

connect from detector_filter.detected_object_set
        to   detector_writer.detected_object_set

# =============================== CORE DESCRIPTOR ==================================

include common_default_descriptor.pipe

connect from downsampler.output_1
        to   descriptor.image
connect from downsampler.timestamp
        to   descriptor.timestamp
connect from detector_filter.detected_object_set
        to   descriptor.detected_object_set

# ================================= CORE TRACKER ===================================

include common_default_tracker.pipe

connect from downsampler.output_1
        to   tracker.image
connect from downsampler.timestamp
        to   tracker.timestamp
connect from descriptor.detected_object_set
        to   tracker.detected_object_set

# ============================ ANALYZE AND INDEX DATA ==============================

process track_descriptor
 :: compute_track_descriptors
  :add_custom_uid                             true
  :uid_basename                               [INSERT_ME]
  :computer:type                              average

connect from downsampler.output_1
        to   track_descriptor.image
connect from downsampler.timestamp
        to   track_descriptor.timestamp
connect from tracker.object_track_set
        to   track_descriptor.object_track_set

process kwa_writer
  :: kw_archive_writer
  :output_directory                           [INSERT_ME]
  :base_filename                              [INSERT_ME]
  :separate_meta                              true
  :stream_id                                  [INSERT_ME]
  :compress_image                             true
  :static/gsd[ro]                             common:fixed_gsd
  :static/corner_points[ro]                   0 0 0 0 0 0 0 0

connect from downsampler.timestamp
        to   kwa_writer.timestamp
connect from downsampler.output_1
        to   kwa_writer.image

process track_writer
  :: write_object_track
  :file_name                                  [INSERT_ME]
  :writer:type                                viame_csv

connect from downsampler.timestamp
        to   track_writer.timestamp
connect from tracker.object_track_set
        to   track_writer.object_track_set

process track_writer_db
  :: write_object_track
  :file_name                                  none
  :writer:type                                db
  :writer:db:conn_str                         postgresql:host=localhost;user=postgres
  :writer:db:video_name                       [INSERT_ME]

connect from downsampler.timestamp
        to   track_writer_db.timestamp
connect from tracker.object_track_set
        to   track_writer_db.object_track_set

process track_writer_kw18
  :: write_object_track

  # Type of file to output
  :file_name                                   [INSERT_ME]
  :writer:type                                 kw18

  # Write out FSO classifications alongside tracks
  :writer:kw18:write_tot             true
  :writer:kw18:tot_field1_ids        fish pristipomoides_auricilla pristipomoides_zonatus pristipomoides_sieboldii etelis_carbunculus etelis_coruscans naso aphareus_rutilans seriola hyporthodus_quernus caranx_melampygus
  :writer:kw18:tot_field2_ids        scallop

connect from downsampler.timestamp
        to   track_writer_kw18.timestamp
connect from tracker.object_track_set
        to   track_writer_kw18.object_track_set

process descriptor_writer_db
  :: write_track_descriptor
  :file_name                                  none
  :writer:type                                db
  :writer:db:conn_str                         postgresql:host=localhost;user=postgres
  :writer:db:video_name                       [INSERT_ME]

connect from track_descriptor.track_descriptor_set
        to   descriptor_writer_db.track_descriptor_set

process smqtk_indexer
  :: smqtk_ingest_descriptors
  relativepath config_file =                  smqtk_postgres_ingest.json

connect from track_descriptor.descriptor_set
        to   smqtk_indexer.descriptor_set

connect from track_descriptor.string_vector
        to   smqtk_indexer.string_vector

# -- end of file --
