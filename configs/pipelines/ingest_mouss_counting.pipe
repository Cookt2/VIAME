# Ingest video pipeline using pytorch descriptors
#
# Runs a multi-node object tracking, descriptor generation, and indexing pipeline
#
# This pipe requires an input source node 'input' to be defined elsewhere

# ================================== VIDEO INPUT ===================================
process downsampler
  :: downsample
  :target_frame_rate                           1
  :burst_frame_count                           0
  :burst_frame_break                           0

connect from input.image
        to   downsampler.input_1
connect from input.frame_rate
        to   downsampler.frame_rate
connect from input.timestamp
        to   downsampler.timestamp

# =================================== DETECTOR =====================================

process yolo_v2_detector
  :: image_object_detector
  :detector:type    darknet

  block detector:darknet

    # Network config, weights, and names
    relativepath net_config  =             models/mouss_yolo_v2_544_generic.cfg
    relativepath weight_file =             models/mouss_yolo_v2_544_generic.weights
    relativepath class_names =             models/mouss_yolo_v2_544_generic.lbl

    # Detector parameters
    :thresh                                0.001
    :hier_thresh                           0.001
    :gpu_index                             0

    # Image scaling parameters
    :resize_option                         maintain_ar
    :resize_ni                             544
    :resize_nj                             544
    :scale                                 1.0
    :chip_step                             500

  endblock

process detector_writer
  :: detected_object_output

  # Type of file to output
  :file_name                                   [INSERT_ME]
  :writer:type                                 viame_csv

connect from downsampler.output_1
        to   yolo_v2_detector.image

connect from yolo_v2_detector.detected_object_set
        to   detector_writer.detected_object_set

# ============================ ANALYZE AND INDEX DATA ==============================

process kwa_writer
  :: kw_archive_writer
  :output_directory                           [INSERT_ME]
  :base_filename                              [INSERT_ME]
  :separate_meta                              true
  :stream_id                                  [INSERT_ME]
  :compress_image                             true
  :static/gsd[ro]                             common:fixed_gsd
  :static/corner_points[ro]                   0 0 0 0 0 0 0 0

connect from downsampler.timestamp
        to   kwa_writer.timestamp
connect from downsampler.output_1
        to   kwa_writer.image

# -- end of file --
