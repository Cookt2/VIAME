# Example simple tracker pipeline
#
# Runs a 8-node object tracking pipeline

# ============================== GLOBAL PROPERTIES =================================
# global pipeline config
#
config _pipeline:_edge
       :capacity 5

# ============================== INPUT FRAME LIST ==================================
process input
  :: frame_list_input
  :image_list_file               input_list.txt
  :frame_time                    0.03333
  :image_reader:type             vxl

# ================================== DETECTOR ======================================

process detector
  :: image_object_detector
  :detector:type                 darknet

  block detector:darknet

    # Network config, weights, and names
    relativepath net_config  =   models/default_yolo_v2.cfg
    relativepath weight_file =   models/default_yolo_v2.weights
    relativepath class_names =   models/default_yolo_v2.lbl

    # Detector parameters
    :thresh                      0.001
    :hier_thresh                 0.001
    :gpu_index                   0

    # Image scaling parameters
    :resize_option               maintain_ar
    :resize_ni                   544
    :resize_nj                   544
    :scale                       1.0

  endblock

process detector_writer
  :: detected_object_output

  # Type of file to output
  :file_name                     output/individual_detections.csv
  :writer:type                   viame_csv

connect from input.image
        to   detector.image
connect from detector.detected_object_set
        to   detector_writer.detected_object_set
connect from input.image_file_name
        to   detector_writer.image_file_name

# ================================ CORE TRACKER  ===================================

process detection_descriptor
 :: compute_track_descriptors
  :inject_to_detections                        true
  :computer:type                               burnout
  relativepath computer:burnout:config_file =  burnout_det_descriptors.conf

process tracker
 :: compute_association_matrix
  :matrix_generator:type                       from_features
  :matrix_generator:from_features:max_distance 40

  block matrix_generator:from_features:filter
    :type                                      class_probablity_filter
    :class_probablity_filter:threshold         0.001
    :class_probablity_filter:keep_all_classes  false
    :class_probablity_filter:keep_classes      fish;scallop
  endblock

process track_associator
  :: associate_detections_to_tracks
  :track_associator:type                       threshold
  :track_associator:threshold:threshold        100.0
  :track_associator:threshold:higher_is_better false

process track_initializer
  :: initialize_object_tracks
  :track_initializer:type                      threshold

  block track_initializer:threshold:filter
    :type                                      class_probablity_filter
    :class_probablity_filter:threshold         0.001
    :class_probablity_filter:keep_all_classes  false
    :class_probablity_filter:keep_classes      fish;scallop
  endblock

# Connect inputs to detection descriptor
connect from input.image
        to   detection_descriptor.image
connect from input.timestamp
        to   detection_descriptor.timestamp
connect from detector.detected_object_set
        to   detection_descriptor.detected_object_set

# Connect inputs to tracker
connect from input.image
        to   tracker.image
connect from input.timestamp
        to   tracker.timestamp
connect from detection_descriptor.detected_object_set
        to   tracker.detected_object_set
connect from track_initializer.object_track_set
        to   tracker.object_track_set

# Connect inputs to track_associator
connect from input.image
        to   track_associator.image
connect from input.timestamp
        to   track_associator.timestamp
connect from tracker.matrix_d
        to   track_associator.matrix_d
connect from tracker.object_track_set
        to   track_associator.object_track_set
connect from tracker.detected_object_set
        to   track_associator.detected_object_set

# Connect inputs to track_initializer
connect from input.image
        to   track_initializer.image
connect from input.timestamp
        to   track_initializer.timestamp
connect from track_associator.object_track_set
        to   track_initializer.object_track_set
connect from track_associator.unused_detections
        to   track_initializer.detected_object_set

# ================================= INDEX DATA  ====================================

process track_writer
  :: write_object_track
  :file_name                        output_tracks.csv
  :writer:type                      viame_csv
  :writer:stream_identifier         input_list.txt

# Connect inputs to track writer
connect from track_initializer.object_track_set
        to   track_writer.object_track_set
connect from input.timestamp
        to   track_writer.timestamp

# -- end of file --
