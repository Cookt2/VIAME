# Ingest video pipeline via caffe descriptors pipeline
#
# Runs a multi-node object tracking, descriptor generation, and indexing pipeline
#
# This pipe requires an input source node 'input' to be defined elsewhere

# ================================== VIDEO INPUT ===================================
process downsampler
  :: downsample
  :target_frame_rate                           1
  :burst_frame_count                           0
  :burst_frame_break                           0

connect from input.image
        to   downsampler.input_1
connect from input.frame_rate
        to   downsampler.frame_rate
connect from input.timestamp
        to   downsampler.timestamp

# =================================== DETECTOR =====================================

process detector
  :: image_object_detector
  :detector:type                               darknet

  block detector:darknet

    # Network config, weights, and names
    relativepath net_config  =                 models/default_yolo_v2.cfg
    relativepath weight_file =                 models/default_yolo_v2.weights
    relativepath class_names =                 models/default_yolo_v2.lbl

    # Detector parameters
    :thresh                                    0.001
    :hier_thresh                               0.001
    :gpu_index                                 0

    # Image scaling parameters
    :resize_option                             maintain_ar
    :resize_ni                                 544
    :resize_nj                                 544
    :scale                                     1.0

  endblock

process detector_writer
  :: detected_object_output

  # Type of file to output
  :file_name                                   [INSERT_ME]
  :writer:type                                 kw18

  # Write out FSO classifications alongside tracks
  :writer:kw18:write_tot                       true
  :writer:kw18:tot_field1_ids                  fish
  :writer:kw18:tot_field2_ids                  scallop

connect from downsampler.output_1
        to   detector.image
connect from detector.detected_object_set
        to   detector_writer.detected_object_set

# ================================= CORE TRACKER ===================================

process detection_descriptor
 :: compute_track_descriptors
  :inject_to_detections                        true
  :computer:type                               burnout
  relativepath computer:burnout:config_file =  burnout_det_descriptors.conf

process tracker
 :: compute_association_matrix
  :matrix_generator:type                       from_features
  :matrix_generator:from_features:max_distance 20

  block matrix_generator:from_features:filter
    :type                                      class_probablity_filter
    :class_probablity_filter:threshold         0.010
    :class_probablity_filter:keep_all_classes  true
    :class_probablity_filter:keep_classes      fish;scallop;generic_object_proposal
  endblock

process track_associator
  :: associate_detections_to_tracks
  :track_associator:type                       threshold
  :track_associator:threshold:threshold        100.0
  :track_associator:threshold:higher_is_better false

process track_initializer
  :: initialize_object_tracks
  :track_initializer:type                      threshold

  block track_initializer:threshold:filter
    :type                                      class_probablity_filter
    :class_probablity_filter:threshold         0.010
    :class_probablity_filter:keep_all_classes  true
    :class_probablity_filter:keep_classes      fish;scallop;generic_object_proposal
  endblock

# Connect inputs to detection descriptor
connect from downsampler.output_1
        to   detection_descriptor.image
connect from downsampler.timestamp
        to   detection_descriptor.timestamp
connect from detector.detected_object_set
        to   detection_descriptor.detected_object_set

# Connect inputs to tracker
connect from downsampler.output_1
        to   tracker.image
connect from downsampler.timestamp
        to   tracker.timestamp
connect from detection_descriptor.detected_object_set
        to   tracker.detected_object_set
connect from track_initializer.object_track_set
        to   tracker.object_track_set

# Connect inputs to track_associator
connect from downsampler.output_1
        to   track_associator.image
connect from downsampler.timestamp
        to   track_associator.timestamp
connect from tracker.matrix_d
        to   track_associator.matrix_d
connect from tracker.object_track_set
        to   track_associator.object_track_set
connect from tracker.detected_object_set
        to   track_associator.detected_object_set

# Connect inputs to track_initializer
connect from downsampler.output_1
        to   track_initializer.image
connect from downsampler.timestamp
        to   track_initializer.timestamp
connect from track_associator.object_track_set
        to   track_initializer.object_track_set
connect from track_associator.unused_detections
        to   track_initializer.detected_object_set

# ============================ ANALYZE AND INDEX DATA ==============================

process track_descriptor
 :: compute_track_descriptors
  :add_custom_uid                             true
  :uid_basename                               [INSERT_ME]
  :computer:type                              average

connect from downsampler.output_1
        to   track_descriptor.image
connect from downsampler.timestamp
        to   track_descriptor.timestamp
connect from track_initializer.object_track_set
        to   track_descriptor.object_track_set

process kwa_writer
  :: kw_archive_writer
  :output_directory                           [INSERT_ME]
  :base_filename                              [INSERT_ME]
  :separate_meta                              true
  :stream_id                                  [INSERT_ME]
  :compress_image                             true
  :static/gsd[ro]                             common:fixed_gsd
  :static/corner_points[ro]                   0 0 0 0 0 0 0 0

connect from downsampler.timestamp
        to   kwa_writer.timestamp
connect from downsampler.output_1
        to   kwa_writer.image

process track_writer
  :: write_object_track
  :file_name                                  [INSERT_ME]
  :writer:type                                kw18

connect from downsampler.timestamp
        to   track_writer.timestamp
connect from track_initializer.object_track_set
        to   track_writer.object_track_set

process track_writer_db
  :: write_object_track
  :file_name                                  none
  :writer:type                                db
  :writer:db:conn_str                         postgresql:host=localhost;user=postgres
  :writer:db:video_name                       [INSERT_ME]

connect from downsampler.timestamp
        to   track_writer_db.timestamp
connect from track_initializer.object_track_set
        to   track_writer_db.object_track_set

process descriptor_writer_db
  :: write_track_descriptor
  :file_name                                  none
  :writer:type                                db
  :writer:db:conn_str                         postgresql:host=localhost;user=postgres
  :writer:db:video_name                       [INSERT_ME]

connect from track_descriptor.track_descriptor_set
        to   descriptor_writer_db.track_descriptor_set

process smqtk_indexer
  :: smqtk_ingest_descriptors
  relativepath config_file =                  smqtk_postgres_ingest.json

connect from track_descriptor.descriptor_set
        to   smqtk_indexer.descriptor_set

connect from track_descriptor.string_vector
        to   smqtk_indexer.string_vector

# -- end of file --
