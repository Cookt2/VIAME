# ==================================================================================
# Commonly used default detector when the user hasn't specified one.
#
# Generates generic object proposals as opposed to any specific class labels.

process detector_input
  :: image_filter
  :filter:type                                 vxl_convert_image

  block filter:vxl_convert_image
    :format                                    byte
    :force_three_channel                       true
  endblock

process color_freq_filter
  :: image_filter
  :filter:type                                 vxl_color_commonality

  block filter:vxl_color_commonality
    :color_resolution_per_channel              16
    :internsity_hist_resolution                32
    :output_scale                              512
  endblock

connect from detector_input.image
        to   color_freq_filter.image

process rgb_to_grey
  :: image_filter
  :filter:type                                 vxl_convert_image

  block filter:vxl_convert_image
    :format                                    byte
    :single_channel                            true
  endblock

connect from detector_input.image
        to   rgb_to_grey.image

process motion_filter
  :: image_filter
  :filter:type                                 vxl_average

  block filter:vxl_average
    :type                                      window
    :window_size                               10
    :round                                     false
    :output_variance                           true
  endblock

connect from rgb_to_grey.image
        to   motion_filter.image

process float_to_byte
  :: image_filter
  :filter:type                                 vxl_convert_image

  block filter:vxl_convert_image
    :format                                    byte
    :scale_factor                              0.50
  endblock

connect from motion_filter.image
        to   float_to_byte.image

process image_merger
  :: merge_images
  :merge_images:type                           ocv

connect from detector_input.image
        to   image_merger.image1
connect from color_freq_filter.image
        to   image_merger.image2
connect from float_to_byte.image
        to   image_merger.image3

process detector1
  :: image_object_detector
  :detector:type                               darknet

  :frame_downsample                            2
  :frame_offset                                0

  block detector:darknet
    # Network config, weights, and names
    relativepath net_config  =                 models/generic_yolo_wtf.cfg
    relativepath weight_file =                 models/generic_yolo_wtf.weights
    relativepath class_names =                 models/generic_yolo_wtf.lbl

    # Detector parameters
    :thresh                                    0.010
    :hier_thresh                               0.001
    :gpu_index                                 0

    # Image scaling parameters
    :resize_option                             adaptive
    :scale                                     1.25
    :chip_step                                 650
    :chip_edge_filter                          10

  endblock

connect from image_merger.image
        to   detector1.image

process detector2
  :: image_object_detector
  :detector:type                               darknet

  :frame_downsample                            2
  :frame_offset                                1

  block detector:darknet
    # Network config, weights, and names
    relativepath net_config  =                 models/generic_yolo_wtf.cfg
    relativepath weight_file =                 models/generic_yolo_wtf.weights
    relativepath class_names =                 models/generic_yolo_wtf.lbl

    # Detector parameters
    :thresh                                    0.010
    :hier_thresh                               0.001
    :gpu_index                                 0

    # Image scaling parameters
    :resize_option                             adaptive
    :scale                                     1.25
    :chip_step                                 650
    :chip_edge_filter                          10

  endblock

connect from image_merger.image
        to   detector2.image

process detector_output
  :: merge_detection_sets

connect from detector1.detected_object_set
        to   detector_output.detected_object_set1
connect from detector2.detected_object_set
        to   detector_output.detected_object_set2
