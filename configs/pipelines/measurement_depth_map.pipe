# Filters input images via debayering them and running basic image filtering

# ============================== GLOBAL PROPERTIES =================================
# global pipeline config
#
config _pipeline:_edge
       :capacity                               5

# =============================== INPUT FRAME LIST =================================

process input
  :: frame_list_input
  :image_list_file                             input_list.txt
  :frame_time                                  1
  :image_reader:type                           vxl
  :image_reader:vxl:force_byte                 true

# ================================== CROP INPUTS ===================================
process split
  :: split_image
  :split_image:type                            ocv

connect from input.image
        to   split.image

# =================================== DEPTH MAP ====================================

process depth_map
  :: compute_stereo_depth_map
  :computer:type                               ocv

connect from split.left_image
        to   depth_map.left_image
connect from split.right_image
        to   depth_map.right_image


process filter
  :: image_filter
  :filter:type                                 ocv_enhancer
  :filter:ocv_enhancer:apply_smoothing         false
  :filter:ocv_enhancer:smooth_kernel           3
  :filter:ocv_enhancer:apply_denoising         false
  :filter:ocv_enhancer:denoise_kernel          3
  :filter:ocv_enhancer:denoise_coeff           2
  :filter:ocv_enhancer:auto_balance            false
  :filter:ocv_enhancer:force_8bit              false
  :filter:ocv_enhancer:apply_clahe             false
  :filter:ocv_enhancer:clip_limit              3
  :filter:ocv_enhancer:saturation              1.20

connect from depth_map.depth_map
        to   filter.image

# ==================================== OUTPUT ======================================

process output
  :: image_writer
  :file_name_template                          depth_map%06d.png
  :image_writer:type                           vxl

connect from filter.image
        to   output.image

# -- end of file --
